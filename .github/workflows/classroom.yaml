name: Autograding Tests
on:
  push:
    branches:
      - main

permissions:
  checks: write
  actions: read
  contents: read

jobs:
  assignment-grader:
    runs-on: ubuntu-latest
    environment:
      name: AWS_DEPLOYMENT
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Start Grading
        run: echo "==== Start Grading ===="
      
      - name: Configure AWS Credentialsg
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: latest

      - name: Disable Terraform Debug
        run: |
          echo "TF_LOG=ERROR" >> $GITHUB_ENV

      - name: Terraform Init
        run: terraform init

      - name: Terraform Check Format
        run: terraform fmt -check -recursive

      - name: Terraform Validate
        run: terraform validate
      
      # Put all the github secrets and variables into terraform.vars
      - name: Set Terraform Variables
        run: |
          touch terraform.tfvars
          echo "webapp_ami_id = \"${{ vars.WEBAPP_AMI_ID }}\"" >> terraform.tfvars
          echo "mysql_ami_id = \"${{ vars.MYSQL_AMI_ID }}\"" >> terraform.tfvars
          echo "database_username = \"${{ vars.DATABASE_USERNAME }}\"" >> terraform.tfvars
          echo "database_password = \"${{ secrets.DATABASE_PASSWORD }}\"" >> terraform.tfvars
          echo "webapp_secret_key = \"${{ secrets.WEBAPP_SECRET_KEY }}\"" >> terraform.tfvars
          echo "domain_name = \"${{ vars.DOMAIN_NAME }}\"" >> terraform.tfvars

          cat terraform.tfvars

      - name: Terraform Plan
        run: terraform plan

      - name: Terraform Apply
        run: terraform apply -auto-approve

      - name: Terraform Output
        run: |
          WEBAPP_PUBLIC_IP=$(terraform output -raw webapp_public_ip)
          echo "WEBAPP_PUBLIC_IP=$WEBAPP_PUBLIC_IP" >> $GITHUB_ENV
          echo "WEBAPP_PUBLIC_IP=$WEBAPP_PUBLIC_IP"

      - name: Golang Setup
        uses: actions/setup-go@v2
        with:
          go-version: 1.23.3

      - name: Build Grader
        run: |
          go build -o auto-grader ./grader/grader.go

      - name: Execute Grader
        run: |
          ./auto-grader $WEBAPP_PUBLIC_IP > grader_result.txt

      - name: Show Grading Result
        run: |
          cat ./grader_result.txt

      - name: Grade 2A - Check Ok Status
        id: grade-2a
        uses: classroom-resources/autograding-command-grader@v1
        with:
          test-name: Check Ok Status
          command: python3 ./grader/result_checker.py 2A
          timeout: 10
          max-score: 10

      - name: Grade 2B - Check No Parameter
        id: grade-2b
        uses: classroom-resources/autograding-command-grader@v1
        with:
          test-name: Check No Parameter
          command: python3 ./grader/result_checker.py 2B
          timeout: 10
          max-score: 10

      - name: Grade 2C - Check Wrong Method
        id: grade-2c
        uses: classroom-resources/autograding-command-grader@v1
        with:
          test-name: Check Wrong Method
          command: python3 ./grader/result_checker.py 2C
          timeout: 10
          max-score: 10

      - name: Grade 4A - Authenticate Endpoint
        id: grade-4a
        uses: classroom-resources/autograding-command-grader@v1
        with:
          test-name: Grade 4A - Authenticate Endpoint
          command: python3 ./grader/result_checker.py 4A
          timeout: 10
          max-score: 10

      - name: Grade 4B - Movie Endpoint
        id: grade-4b
        uses: classroom-resources/autograding-command-grader@v1
        with:
          test-name: Grade 4B - Movie Endpoint
          command: python3 ./grader/result_checker.py 4B
          timeout: 10
          max-score: 10

      - name: Grade 4C - Rating Endpoint
        id: grade-4c
        uses: classroom-resources/autograding-command-grader@v1
        with:
          test-name: Grade 4C - Rating Endpoint
          command: python3 ./grader/result_checker.py 4C
          timeout: 10
          max-score: 10

      - name: Grade 4D - Link Endpoint
        id: grade-4d
        uses: classroom-resources/autograding-command-grader@v1
        with:
          test-name: Grade 4D - Link Endpoint
          command: python3 ./grader/result_checker.py 4D
          timeout: 10
          max-score: 10

      - name: Grade 4E - Unauthorized Endpoint
        id: grade-4e
        uses: classroom-resources/autograding-command-grader@v1
        with:
          test-name: Grade 4E - Unauthorized Endpoint
          command: python3 ./grader/result_checker.py 4E
          timeout: 10
          max-score: 10
        

      - name: Autograding Reporter
        uses: classroom-resources/autograding-grading-reporter@v1
        env:
          GRADE-2A_RESULTS: "${{steps.grade-2a.outputs.result}}"
          GRADE-2B_RESULTS: "${{steps.grade-2b.outputs.result}}"
          GRADE-2C_RESULTS: "${{steps.grade-2c.outputs.result}}"
          GRADE-4A_RESULTS: "${{steps.grade-4a.outputs.result}}"
          GRADE-4B_RESULTS: "${{steps.grade-4b.outputs.result}}"
          GRADE-4C_RESULTS: "${{steps.grade-4c.outputs.result}}"
          GRADE-4D_RESULTS: "${{steps.grade-4d.outputs.result}}"
          GRADE-4E_RESULTS: "${{steps.grade-4e.outputs.result}}"
        with:
          runners: grade-2a, grade-2b, grade-2c, grade-4a, grade-4b, grade-4c, grade-4d, grade-4e

      - name: Terraform Destroy
        if: always()
        continue-on-error: true
        run: terraform destroy -auto-approve
