name: integration_tests

on:
  workflow_dispatch:

permissions:
  checks: write
  actions: read
  contents: read

jobs:
  deploy-and-test:
    runs-on: ubuntu-latest
    environment:
      name: AWS_DEPLOYMENT

    steps:
      # Step 1: Checkout Code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Configure AWS Credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      # Step 3: Setup Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: latest

      - name: Disable Terraform Debug
        run: |
          echo "TF_LOG=ERROR" >> $GITHUB_ENV

      - name: Terraform Init
        run: terraform init

      - name: Terraform Check Format
        run: terraform fmt -check -recursive

      - name: Terraform Validate
        run: terraform validate

      # Step 4: Put all the github secrets and variables into terraform.vars
      - name: Set Terraform Variables
        run: |
          touch terraform.tfvars
          echo "webapp_ami_id = \"${{ vars.WEBAPP_AMI_ID }}\"" >> terraform.tfvars
          echo "mysql_ami_id = \"${{ vars.MYSQL_AMI_ID }}\"" >> terraform.tfvars
          echo "database_username = \"${{ vars.DATABASE_USERNAME }}\"" >> terraform.tfvars
          echo "database_password = \"${{ secrets.DATABASE_PASSWORD }}\"" >> terraform.tfvars
          echo "webapp_secret_key = \"${{ secrets.WEBAPP_SECRET_KEY }}\"" >> terraform.tfvars

          cat terraform.tfvars

      # Step 5: Terraform plan
      - name: Terraform Plan
        run: terraform plan

      # Step 6: Terraform apply
      - name: Terraform Apply
        run: terraform apply -auto-approve

      # Step 7: Terraform output
      - name: Terraform Output
        run: |
          WEBAPP_PUBLIC_IP=$(terraform output -raw webapp_public_ip)
          echo "WEBAPP_PUBLIC_IP=$WEBAPP_PUBLIC_IP" >> $GITHUB_ENV
          echo "WEBAPP_PUBLIC_IP=$WEBAPP_PUBLIC_IP"

      # Step 8: Set up Python environment for testing
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install -r movie_endpoint_test/requirements.txt 

      - name: Set up environment variables
        run: |
          echo "admin_user=${{ secrets.ADMIN_USER }}" >> movie_endpoint_test/test/.env
          echo "admin_pass=${{ secrets.ADMIN_PASS }}" >> movie_endpoint_test/test/.env
          echo "app_ip=$WEBAPP_PUBLIC_IP" >> movie_endpoint_test/test/.env
          cat movie_endpoint_test/test/.env
          echo "Environment variables are set"

      # Step 8: Run tests
      - name: Run tests
        run: |
          source venv/bin/activate
          pip list
          pytest -v

      # Step 9: Terraform Destroy
      - name: Terraform Destroy
        if: always()
        run: terraform destroy -auto-approve